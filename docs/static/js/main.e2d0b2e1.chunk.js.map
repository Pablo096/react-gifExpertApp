{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BAAOO,KAAK,OAAQC,MAAOT,EAAYU,SAfrB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAYZM,GAZY,4CAAH,sDCCL,SAASO,EAAT,GAAwC,IAAhBH,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAC1C,OACI,yBAAKc,UAAU,8CACb,yBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,2BAAIA,ICFC,SAASO,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,SAE7B,ECHwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAACqB,KAAM,GAAIa,SAAS,IAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OAVAC,qBAAW,WACPxB,EAAQC,GAAUwB,MAAM,SAAAC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAGEqB,EDX2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,oCACA,wBAAIJ,UAAU,2CAA2ChB,GACvDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAkB,GAAK,OAAI,kBAACZ,EAAD,eAAaa,IAAKD,EAAMhB,IAAQgB,SEV9D,IAAME,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACG,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,kBAACmB,EAAD,CAASS,IAAK5B,EAAUA,SAAUA,U,MChBtD8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e2d0b2e1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories,]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\"  value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) =>  {\r\n    const url =  `https://api.giphy.com/v1/gifs/search?api_key=UhbsG6lwgIoVrsSxJu9fdpoii7VNzxKc&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    // setImages(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem( { title, url } ) {\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInDown\">\r\n          <img src={url} alt={ title }/>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport default function GifGrid({category}) {\r\n    \r\n    const { data: images, loading } = useFetchGifs(category);\r\n       \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounceInDown\">{category}</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( image => <GifGridItem key={image.id} {...image} />)\r\n                //return <li key={image.id}>{image.title}</li>         \r\n            }\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({data: [], loading: true});\r\n\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Code Lyoko']);\r\n    // }\r\n\r\n    return (\r\n       <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        \r\n        <ol>\r\n            { \r\n                categories.map( category =>\r\n                    <GifGrid key={category} category={category} /> \r\n                    //   <li key={category}>{category}</li>\r\n                 )\r\n            }\r\n        </ol>\r\n       </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />, \n  document.getElementById('root')\n);"],"sourceRoot":""}